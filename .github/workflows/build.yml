name: Go

on:
  schedule:
    - cron: '0 0 * * *'
  push:
  workflow_dispatch:
    inputs:
      tbBranch:
        description: 'TDengine branch'
        required: true
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout TDengine by push
        if: github.event_name == 'push' || github.event_name == 'schedule'
        uses: actions/checkout@v4
        with:
          repository: 'taosdata/TDengine'
          path: 'TDengine'
          ref: main
      
      - name: checkout TDengine manually
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          repository: 'taosdata/TDengine'
          path: 'TDengine'
          ref: ${{ inputs.tbBranch }}

      - name: Get CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.31.6

      - name: Cache externals built
        uses: actions/cache@v4
        id: cache-ext
        with:
          path: TDengine/.externals
          key: ${{ runner.os }}--${{ hashFiles('TDengine/cmake/external.cmake', 'cmake/in/**') }}-build-ext-v3

      - name: Cmake TDengine
        run: |
          cd TDengine
          mkdir debug && cd debug
          cmake .. -DBUILD_DEPENDENCY_TESTS=false

      - name: Make TDengine
        run: |
          cd TDengine/debug/
          make -j8
          sudo make install

      - name: start shell
        run: |
          cat >start.sh<<EOF
          ulimit -n 65535 && TAOS_SUPPORT_VNODES=256 taosd
          EOF

      - name: start taosd
        run: nohup sudo sh ./start.sh & disown
      
      - name: checkout
        uses: actions/checkout@v4
        with:
          path: 'tests'
      
      - name: build tests
        run: |
          cd tests
          mkdir debug && cd debug
          cmake ..
          make -j8

      - name: run tests
        run: |
          cd tests/tests
          taos -s "create database test"
          sleep 5
          pip install psutil
          python3 monitor.py
          tree ../dist

      - name: push dist
        run: |
          cd tests
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -f dist/data
          git commit -m "Auto-update test files"
          git push
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './tests/dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
